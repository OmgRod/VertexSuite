name: Compile Python Scripts

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Find and compile main.py files (Linux/Mac)
      if: runner.os != 'Windows'
      run: |
        find . -name "main.py" | while read file; do
          dir_name=$(basename "$(dirname "$file")")
          pyinstaller --onefile --noconsole --clean --noupx --name "$dir_name" --add-data "$(dirname "$file")/*:." "$file"
        done

    - name: Find and compile main.py files (Windows)
      if: runner.os == 'Windows'
      run: |
        Get-ChildItem -Recurse -Filter "main.py" | ForEach-Object {
          $dirName = $_.Directory.Name
          pyinstaller --onefile --noconsole --clean --noupx --name $dirName --add-data "$($_.Directory.FullName)\*;." $_.FullName
        }

    - name: Upload executables (Linux)
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v3
      with:
        name: executables-linux
        path: |
          dist/*

    - name: Upload executables (macOS)
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v3
      with:
        name: executables-macos
        path: |
          dist/*

    - name: Upload executables (Windows)
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v3
      with:
        name: executables-windows
        path: |
          dist/*